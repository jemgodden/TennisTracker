from datetime import datetime
import pandas as pd
import streamlit as st
from streamlit_extras.switch_page_button import switch_page

from src.tennis import Match
from src.utils import create_backend_df


# Application page - 'Load Match':
# Let user load a previously created match data csv file and set appropriate session state variables.


if __name__ == "__main__":

    st.set_page_config(
        page_title="Load Match",
        page_icon=":floppy_disk:",
        layout='wide',
        # initial_sidebar_state="collapsed",
    )

    st.title("Load a Previous Match :floppy_disk:")

    with st.container(key="upload_data"):
        st.header("Upload a File")

        uploaded_file = st.file_uploader(
            "Choose a CSV file",
            type=['csv'],
            accept_multiple_files=False
        )
        if uploaded_file:
            try:
                loaded_match_data = pd.read_csv(uploaded_file)
            except:
                st.error("File is not compatible. Please make sure you are uploading a file generated by this application.")
                st.stop()

            temp_backend_df = create_backend_df()
            if loaded_match_data.columns.values.shape[0] != temp_backend_df.columns.values.shape[0] \
                    or loaded_match_data.columns.intersection(temp_backend_df.columns).shape[0] != temp_backend_df.columns.values.shape[0]:
                st.error("File is not compatible. Please make sure you are uploading a file generated by this application.")
                st.stop()

            loaded_match = Match(
                player1_name=loaded_match_data['meta_player1_name'].iloc[0],
                player2_name=loaded_match_data['meta_player2_name'].iloc[0]
            )

            # Add points to new match.
            for _, row in loaded_match_data.iterrows():
                loaded_match.add_point(row.winner)

            st.session_state['match_data'] = loaded_match_data
            st.session_state['match'] = loaded_match
            st.session_state['match_datetime'] = datetime.strptime(loaded_match_data['meta_match_datetime'].iloc[0], '%Y-%m-%d %H:%M:%S.%f%z')
            st.session_state['player1_name'] = loaded_match_data['meta_player1_name'].iloc[0]
            st.session_state['player2_name'] = loaded_match_data['meta_player2_name'].iloc[0]

        st.caption("Note that loading a file will overwrite any previous information added in the 'New Match' page.  \nConsider saving the file first.")

    with st.container(key="page_navigation"):
        st.write("###")
        st.divider()
        left, right = st.columns(2)
        if left.button("Continue Tracking Match"):
            switch_page("Track Match")
        if right.button("Analyse Loaded Match"):
            switch_page("Analyse Match")
